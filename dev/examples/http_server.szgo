{
	"name": "HTTP Server",
	"package_path": "github.com/google/shenzhen-go/dev/examples/http_server",
	"is_command": true,
	"nodes": {
		"Generate a Mandelbrot": {
			"part": {
				"imports": [
					"\"image\"",
					"\"image/color\"",
					"\"image/png\"",
					"\"math/cmplx\"",
					"\"strconv\"",
					"\"github.com/google/shenzhen-go/dev/parts\""
				],
				"head": [
					"const tileW = 320",
					"const depth = 25",
					""
				],
				"body": [
					"for req := range requests {",
					"\tfunc() {",
					"\t\tdefer req.Close()",
					"",
					"\t\tq := req.Request.URL.Query()",
					"\t\ttileX, e0 := strconv.Atoi(q.Get(\"x\"))",
					"\t\ttileY, e1 := strconv.Atoi(q.Get(\"y\"))",
					"\t\tzoom, e2 := strconv.ParseUint(q.Get(\"z\"), 10, 64)",
					"\t\tif e0 != nil || e1 != nil || e2 != nil || zoom \u003e 50 {",
					"\t\t\thttp.Error(req, \"invalid parameter\", http.StatusBadRequest)",
					"\t\t\treturn",
					"\t\t}",
					"\t\tzoom = 1 \u003c\u003c zoom",
					"\t\toffset := complex(float64(tileX), float64(tileY))",
					"",
					"\t\treq.Header().Set(\"Content-Type\", \"image/png\")",
					"\t\treq.WriteHeader(http.StatusOK)",
					"",
					"\t\timg := image.NewRGBA(image.Rect(0, 0, tileW, tileW))",
					"",
					"\t\tfor i := 0; i \u003c tileW; i++ {",
					"\t\t\tfor j := 0; j \u003c tileW; j++ {",
					"\t\t\t\tc := complex(float64(i), float64(j))",
					"\t\t\t\tc /= tileW",
					"\t\t\t\tc += offset",
					"\t\t\t\tc *= 2",
					"\t\t\t\tc /= complex(float64(zoom), 0)",
					"",
					"\t\t\t\tz := 0i",
					"",
					"\t\t\t\tcol := color.Black",
					"\t\t\t\tfor k := 0; k \u003c depth; k++ {",
					"\t\t\t\t\tz = z*z + c",
					"\t\t\t\t\tif cmplx.Abs(z) \u003e 2 {",
					"\t\t\t\t\t\tcol = color.White",
					"\t\t\t\t\t\tbreak",
					"\t\t\t\t\t}",
					"\t\t\t\t}",
					"\t\t\t\timg.Set(i, j, col)",
					"\t\t\t}",
					"\t\t}",
					"",
					"\t\tpng.Encode(req, img)",
					"\t}()",
					"}"
				],
				"tail": [
					""
				],
				"pins": {
					"requests": {
						"type": "*parts.HTTPRequest",
						"dir": "in"
					}
				}
			},
			"part_type": "Code",
			"comment": "Generates a Mandelbrot fractal",
			"enabled": true,
			"wait": true,
			"multiplicity": "N",
			"x": 25,
			"y": 568,
			"connections": {
				"requests": "channel7"
			}
		},
		"HTTPServeMux": {
			"part": {
				"enable_prometheus": true,
				"routes": {
					"/": "root",
					"/mandelbrot": "mandelbrot",
					"/metrics": "metrics"
				}
			},
			"part_type": "HTTPServeMux",
			"enabled": true,
			"wait": true,
			"multiplicity": "N",
			"x": 202,
			"y": 296,
			"connections": {
				"mandelbrot": "channel6",
				"metrics": "channel3",
				"requests": "channel0",
				"root": "channel4"
			}
		},
		"HTTPServer": {
			"part": {},
			"part_type": "HTTPServer",
			"enabled": true,
			"wait": true,
			"multiplicity": "1",
			"x": 211,
			"y": 163,
			"connections": {
				"errors": "channel2",
				"manager": "channel1",
				"requests": "channel0"
			}
		},
		"Log errors": {
			"part": {
				"imports": [
					"\"log\""
				],
				"head": [
					""
				],
				"body": [
					"for err := range errors {",
					"\tlog.Printf(\"HTTP server: %v\", err)",
					"}"
				],
				"tail": [
					""
				],
				"pins": {
					"errors": {
						"type": "error",
						"dir": "in"
					}
				}
			},
			"part_type": "Code",
			"enabled": true,
			"wait": true,
			"multiplicity": "1",
			"x": 58,
			"y": 294,
			"connections": {
				"errors": "channel2"
			}
		},
		"Mandelbrot duration": {
			"part": {
				"instrumenter": "Duration",
				"label_code": false,
				"label_method": false
			},
			"part_type": "PrometheusInstrumentHandler",
			"enabled": true,
			"wait": true,
			"multiplicity": "N",
			"x": 38,
			"y": 412,
			"connections": {
				"in": "channel6",
				"out": "channel7"
			}
		},
		"Metrics": {
			"part": {},
			"part_type": "PrometheusMetricsHandler",
			"enabled": true,
			"wait": true,
			"multiplicity": "N",
			"x": 232,
			"y": 487,
			"connections": {
				"requests": "channel3"
			}
		},
		"Root duration": {
			"part": {
				"instrumenter": "Duration",
				"label_code": false,
				"label_method": false
			},
			"part_type": "PrometheusInstrumentHandler",
			"enabled": true,
			"wait": true,
			"multiplicity": "N",
			"x": 340,
			"y": 409,
			"connections": {
				"in": "channel4",
				"out": "channel5"
			}
		},
		"Send a manager": {
			"part": {
				"imports": [
					"\"context\"",
					"\"fmt\"",
					"\"time\"",
					"\"os\"",
					"\"os/signal\"",
					"\"github.com/google/shenzhen-go/dev/parts\""
				],
				"head": [
					""
				],
				"body": [
					"mgr := parts.NewHTTPServerManager(\":8765\")",
					"manager \u003c- mgr",
					"",
					"sig := make(chan os.Signal, 1)",
					"signal.Notify(sig, os.Interrupt)",
					"fmt.Println(\"Press Ctrl-C (or SIGINT) to shut down.\")",
					"\u003c-sig",
					"",
					"timeout := 5 * time.Second",
					"fmt.Printf(\"Shutting down within %v...\\n\", timeout)",
					"ctx, canc := context.WithTimeout(context.Background(), timeout)",
					"mgr.Shutdown(ctx)",
					"go func() {",
					"\ttime.Sleep(timeout)",
					"\tcanc()",
					"}()"
				],
				"tail": [
					"close(manager)"
				],
				"pins": {
					"manager": {
						"type": "parts.HTTPServerManager",
						"dir": "out"
					}
				}
			},
			"part_type": "Code",
			"enabled": true,
			"wait": true,
			"multiplicity": "1",
			"x": 196,
			"y": 39,
			"connections": {
				"manager": "channel1"
			}
		},
		"index.html": {
			"part": {
				"imports": [
					""
				],
				"head": [
					""
				],
				"body": [
					"for rw := range requests {",
					"\trw.Write([]byte(`\u003chtml\u003e",
					"\u003chead\u003e\u003ctitle\u003eMandelbrot viewer\u003c/title\u003e\u003c/head\u003e",
					"\u003cbody\u003e",
					"\t\u003cimg src=\"/mandelbrot?x=-1\u0026y=-1\u0026z=0\" /\u003e\u003cimg src=\"/mandelbrot?x=0\u0026y=-1\u0026z=0\" /\u003e\u003cbr/\u003e",
					"\t\u003cimg src=\"/mandelbrot?x=-1\u0026y=0\u0026z=0\" /\u003e\u003cimg src=\"/mandelbrot?x=0\u0026y=0\u0026z=0\" /\u003e\u003cbr /\u003e",
					"\u003c/body\u003e",
					"\u003c/html\u003e`))",
					"\trw.Close()",
					"}"
				],
				"tail": [
					""
				],
				"pins": {
					"requests": {
						"type": "*parts.HTTPRequest",
						"dir": "in"
					}
				}
			},
			"part_type": "Code",
			"enabled": true,
			"wait": true,
			"multiplicity": "N",
			"x": 351,
			"y": 558,
			"connections": {
				"requests": "channel5"
			}
		}
	},
	"channels": {
		"channel0": {
			"cap": 0
		},
		"channel1": {
			"cap": 0
		},
		"channel2": {
			"cap": 0
		},
		"channel3": {
			"cap": 0
		},
		"channel4": {
			"cap": 0
		},
		"channel5": {
			"cap": 0
		},
		"channel6": {
			"cap": 0
		},
		"channel7": {
			"cap": 0
		}
	}
}
