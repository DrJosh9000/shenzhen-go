// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax="proto3";

package proto;

message Empty {}

message NodeConfig {
	string name = 1;
    bool enabled = 2;
    uint32 multiplicity = 3;
    bool wait = 4;
    bytes part_cfg = 5;
	string part_type = 6;
	double x = 7;
    double y = 8;
}

message CreateChannelRequest {
	string graph = 1;
	string name = 2;
	string type = 3;
    bool anon = 4;
    uint64 cap = 5;
	// Also connect two pins together, to reduce chatter (1 Create RPC instead of [Create, Connect, Connect])
	string node1 = 6;
	string pin1 = 7;
	string node2 = 8;
	string pin2 = 9;
}

message CreateNodeRequest {
	string graph = 1;
	NodeConfig props = 2;
}

message ConnectPinRequest {
	string graph = 1;
	string node = 2;
	string pin = 3;
	string channel = 4;
}

message DeleteChannelRequest {
	string graph = 1;
	string channel = 2;
}

message DeleteNodeRequest {
	string graph = 1;
	string node = 2;
}

message DisconnectPinRequest {
	string graph = 1;
	string node = 2;
	string pin = 3;
}

message SaveRequest {
	string graph = 1;
}

message SetGraphPropertiesRequest {
	string graph = 1;
	string name = 2;
	string package_path = 3;
	bool is_command = 4;
}

message SetNodePropertiesRequest {
	string graph = 1;
	string node = 2;
	NodeConfig props = 3;
}

message SetPositionRequest {
	string graph = 1;
	string node = 2;
	double x = 3;
    double y = 4;
}

service ShenzhenGo {
	// CreateChannel makes a new channel.
	rpc CreateChannel(CreateChannelRequest) returns (Empty) {}

	// CreateNode makes a new node.
	rpc CreateNode(CreateNodeRequest) returns (Empty) {}

	// ConnectPin connects a pin to a channel.
	rpc ConnectPin(ConnectPinRequest) returns (Empty) {}

	// DeleteChannel deletes a channel (and all connections).
	rpc DeleteChannel(DeleteChannelRequest) returns (Empty) {}

	// DeleteNode deletes a node (and all connections).
	rpc DeleteNode(DeleteNodeRequest) returns (Empty) {}
		
	// DisconnectPin deletes the connection from a pin to a channel.
	rpc DisconnectPin(DisconnectPinRequest) returns (Empty) {}

	// Save saves the graph to disk.
	rpc Save(SaveRequest) returns (Empty) {}

	// SetGraphProperties changes metdata such as name and package path.
	rpc SetGraphProperties(SetGraphPropertiesRequest) returns (Empty) {}

	// SetNodeProperties changes node metadata such as name and multiplicity.
	rpc SetNodeProperties(SetNodePropertiesRequest) returns (Empty) {}

	// SetPosition changes the node position in the diagram.
	rpc SetPosition(SetPositionRequest) returns (Empty) {}
}