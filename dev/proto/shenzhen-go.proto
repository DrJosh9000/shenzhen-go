// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax="proto3";

package proto;

message Empty {}

message NodePin {
	string node = 1;
	string pin = 2;
}

message ChannelConfig {
	string name = 1;
	string type = 2;
    bool anon = 3;
    uint64 cap = 4;
	repeated NodePin pins = 5;
}

message NodeConfig {
	string name = 1;
    bool enabled = 2;
    uint32 multiplicity = 3;
    bool wait = 4;
    bytes part_cfg = 5;
	string part_type = 6;
	double x = 7;
    double y = 8;
}

message SaveRequest {
	string graph = 1;
}

message SetChannelRequest {
	string graph = 1;
	string channel = 2;
	ChannelConfig config = 3;
}

message SetGraphPropertiesRequest {
	string graph = 1;
	string name = 2;
	string package_path = 3;
	bool is_command = 4;
}

message SetNodeRequest {
	string graph = 1;
	string node = 2;
	NodeConfig config = 3;
}

message SetPositionRequest {
	string graph = 1;
	string node = 2;
	double x = 3;
    double y = 4;
}

service ShenzhenGo {
	// Save saves the graph to disk.
	rpc Save(SaveRequest) returns (Empty) {}

	// SetNode either creates a new channel (name == "", config != nil)
	// changes existing channel data such as name and attached pins (name is found, config != nil),
	// or deletes a channel (name is found, config == nil).
	rpc SetChannel(SetChannelRequest) returns (Empty) {}

	// SetGraphProperties changes metdata such as name and package path.
	rpc SetGraphProperties(SetGraphPropertiesRequest) returns (Empty) {}

	// SetNode either creates a new node (name == "", config != nil)
	// changes existing node such as name and multiplicity (name is found, config != nil),
	// or deletes a node (name is found, config == nil).
	rpc SetNode(SetNodeRequest) returns (Empty) {}

	// SetPosition changes the node position in the diagram.
	rpc SetPosition(SetPositionRequest) returns (Empty) {}
}